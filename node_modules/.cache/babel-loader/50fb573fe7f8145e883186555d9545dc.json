{"remainingRequest":"C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\babel-loader\\lib\\index.js??ref--16-1!C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\cube-ui\\src\\components\\time-picker\\time-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\cube-ui\\src\\components\\time-picker\\time-picker.vue","mtime":499162500000},{"path":"C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cui_yongjun\\vue-sell-cube\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["time-picker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <cube-cascade-picker\n    ref=\"picker\"\n    v-model=\"isVisible\"\n    :data=\"cascadeData\"\n    :selected-index=\"selectedIndex\"\n    :title=\"_title\"\n    :subtitle=\"subtitle\"\n    :cancel-txt=\"_cancelTxt\"\n    :confirm-txt=\"_confirmTxt\"\n    :swipe-time=\"swipeTime\"\n    :z-index=\"zIndex\"\n    :mask-closable=\"maskClosable\"\n    @select=\"_pickerSelect\"\n    @cancel=\"_pickerCancel\"\n    @change=\"_pickerChange\">\n  </cube-cascade-picker>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import {\n    pad,\n    formatDate,\n    getZeroStamp,\n    getDayDiff,\n    DAY_TIMESTAMP,\n    HOUR_TIMESTAMP,\n    MINUTE_TIMESTAMP\n  } from '../../common/lang/date'\n  import visibilityMixin from '../../common/mixins/visibility'\n  import popupMixin from '../../common/mixins/popup'\n  import pickerMixin from '../../common/mixins/picker'\n  import localeMixin from '../../common/mixins/locale'\n  import CubeCascadePicker from '../cascade-picker/cascade-picker.vue'\n  import { warn } from '../../common/helpers/debug'\n\n  const COMPONENT_NAME = 'cube-time-picker'\n  const EVENT_SELECT = 'select'\n  const EVENT_CANCEL = 'cancel'\n  const EVENT_CHANGE = 'change'\n\n  const NOW = {\n    value: 'now'\n  }\n\n  const INT_RULE = {\n    floor: 'floor',\n    ceil: 'ceil',\n    round: 'round'\n  }\n\n  const DEFAULT_STEP = 10\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [visibilityMixin, popupMixin, pickerMixin, localeMixin],\n    components: {\n      CubeCascadePicker\n    },\n    props: {\n      title: {\n        type: String,\n        default: ''\n      },\n      delay: {\n        type: Number,\n        default: 15\n      },\n      day: {\n        type: Object,\n        default() {\n          return {\n            len: 3\n          }\n        }\n      },\n      showNow: {\n        type: [Boolean, Object],\n        default: true\n      },\n      minuteStep: {\n        type: [Number, Object],\n        default: DEFAULT_STEP\n      },\n      format: {\n        type: String,\n        default: 'YYYY/M/D hh:mm'\n      },\n      min: {\n        type: [Date, Number],\n        default: null\n      },\n      max: {\n        type: [Date, Number],\n        default: null\n      }\n    },\n    data() {\n      return {\n        now: new Date(),\n        selectedIndex: [0, 0, 0],\n        value: 0\n      }\n    },\n    computed: {\n      _title () {\n        return this.title || this.$t('selectTime')\n      },\n      _day () {\n        const defaultDay = {\n          filter: [this.$t('today')],\n          format: this.$t('formatDate')\n        }\n        return Object.assign({}, defaultDay, this.day)\n      },\n      nowText() {\n        const defaultText = this.$t('now')\n        return (this.showNow && this.showNow.text) || defaultText\n      },\n      minuteStepRule() {\n        const minuteStep = this.minuteStep\n        return (typeof minuteStep === 'object' && Math[INT_RULE[minuteStep.rule]]) || Math[INT_RULE.floor]\n      },\n      minuteStepNumber() {\n        const minuteStep = this.minuteStep\n        return typeof minuteStep === 'number' ? minuteStep : (minuteStep.step || DEFAULT_STEP)\n      },\n      minTime() {\n        let minTimeStamp = +this.min || +this.now + this.delay * MINUTE_TIMESTAMP\n\n        // Handle the minTime selectable change caused by minute step.\n        const minute = new Date(minTimeStamp).getMinutes()\n        const intMinute = Math.min(this.minuteStepRule(minute / this.minuteStepNumber) * this.minuteStepNumber, 60)\n\n        minTimeStamp += (intMinute - minute) * MINUTE_TIMESTAMP\n        return new Date(minTimeStamp)\n      },\n      maxTime() {\n        let maxTimeStamp = +this.max || (getZeroStamp(new Date(+this.minTime + this._day.len * DAY_TIMESTAMP)) - 1)\n\n        const minute = new Date(maxTimeStamp).getMinutes()\n        const intMinute = Math.floor(minute / this.minuteStepNumber) * this.minuteStepNumber\n        maxTimeStamp -= (minute - intMinute) * MINUTE_TIMESTAMP\n\n        return new Date(maxTimeStamp)\n      },\n      days() {\n        const days = []\n        const dayDiff = getDayDiff(this.minTime, this.now)\n        const len = this.max ? getDayDiff(this.maxTime, this.minTime) + 1 : this._day.len\n\n        for (let i = 0; i < len; i++) {\n          const timestamp = +this.minTime + i * DAY_TIMESTAMP\n          days.push({\n            value: timestamp,\n            text: (this._day.filter && this._day.filter[dayDiff + i]) || formatDate(new Date(timestamp), this._day.format)\n          })\n        }\n        return days\n      },\n      hours() {\n        const hours = []\n        for (let i = 0; i < 24; i++) {\n          hours.push({\n            value: i,\n            text: `${i}${this.$t('hours')}`,\n            children: this.minutes\n          })\n        }\n        return hours\n      },\n      minutes() {\n        const minutes = []\n        for (let i = 0; i < 60; i += this.minuteStepNumber) {\n          minutes.push({\n            value: i,\n            text: `${pad(i)}${this.$t('minutes')}`\n          })\n        }\n        return minutes\n      },\n      cascadeData() {\n        const days = this.days.slice()\n\n        // When the maxTime is smaller than minTime by more than a minute step, there is no option could be chosen.\n        if (this.maxTime - this.minTime <= -60000) {\n          warn('The max is smaller than the min optional time.', COMPONENT_NAME)\n          return []\n        }\n\n        days.forEach((day, index) => {\n          const isMinDay = index === 0\n          const isMaxDay = index === days.length - 1\n\n          if (!isMinDay && !isMaxDay) {\n            day.children = this.hours\n            return\n          }\n\n          const partHours = []\n          const minHour = isMinDay ? this.minTime.getHours() : 0\n          const maxHour = isMaxDay ? this.maxTime.getHours() : 23\n\n          for (let i = minHour; i <= maxHour; i++) {\n            const isMinHour = isMinDay && i === minHour\n            const isMaxHour = isMaxDay && i === maxHour\n\n            if (!isMinHour && !isMaxHour) {\n              partHours.push({\n                value: i,\n                text: `${i}${this.$t('hours')}`,\n                children: this.minutes\n              })\n              continue\n            }\n\n            // Math.round is use to avoid some weird float bug of multiplication and divisionluate in JavaScript. Because we have to ensure the arguments of Array.slice are int.\n            const start = isMinHour ? Math.round(this.minTime.getMinutes() / this.minuteStepNumber) : 0\n            const end = isMaxHour ? Math.round(this.maxTime.getMinutes() / this.minuteStepNumber) : Math.floor(59 / this.minuteStepNumber)\n\n            const partMinutes = this.minutes.slice(start, end + 1)\n            partHours.push({\n              value: i,\n              text: `${i}${this.$t('hours')}`,\n              children: partMinutes\n            })\n          }\n\n          day.children = partHours\n        })\n\n        if (this.showNow) {\n          days[0].children.unshift({\n            value: NOW.value,\n            text: this.nowText,\n            children: []\n          })\n        }\n\n        return days\n      }\n    },\n    methods: {\n      show() {\n        if (this.isVisible) {\n          return\n        }\n        this.isVisible = true\n\n        this._updateNow()\n        this._updateSelectedIndex()\n      },\n      setTime(value) {\n        this.value = value\n\n        this.isVisible && this._updateSelectedIndex()\n      },\n      _updateSelectedIndex() {\n        const value = this.value\n        const minTime = this.minTime\n        // fix the value last choose was changed when time-picker is opened again\n        const comparativeTime = (this.min || this.min === 0)\n          ? +minTime\n          : Math.floor(minTime / MINUTE_TIMESTAMP) * MINUTE_TIMESTAMP\n        if (value < comparativeTime) {\n          this.selectedIndex = [0, 0, 0]\n        } else {\n          // calculate dayIndex\n          const valueDate = new Date(value)\n          const dayIndex = getDayDiff(valueDate, minTime)\n\n          if (dayIndex >= this.days.length) {\n            warn('Use \"setTime\" to set a time exceeded to the option range do not actually work.', COMPONENT_NAME)\n            return\n          }\n\n          // calculate hourIndex\n          const hour = valueDate.getHours()\n          const beginHour = dayIndex === 0\n            ? this.showNow\n              ? this.minTime.getHours() - 1\n              : this.minTime.getHours()\n            : 0\n          const hourIndex = hour - beginHour\n\n          // calculate minuteIndex\n          const minute = this.minuteStepRule(valueDate.getMinutes() / this.minuteStepNumber)\n          const beginMinute = !dayIndex && (this.showNow ? hourIndex === 1 : !hourIndex)\n            ? this.minuteStepRule(this.minTime.getMinutes() / this.minuteStepNumber)\n            : 0\n          const minuteIndex = minute - beginMinute\n\n          this.selectedIndex = [dayIndex, hourIndex, minuteIndex]\n        }\n      },\n      _updateNow() {\n        this.now = new Date()\n      },\n      _pickerChange(i, newIndex) {\n        this.$emit(EVENT_CHANGE, i, newIndex)\n      },\n      _pickerSelect(selectedVal, selectedIndex, selectedText) {\n        let timestamp\n        let text\n        if (selectedVal[1] === NOW.value) {\n          timestamp = +new Date()\n          text = this.nowText\n        } else {\n          timestamp = getZeroStamp(new Date(selectedVal[0])) + selectedVal[1] * HOUR_TIMESTAMP + selectedVal[2] * MINUTE_TIMESTAMP\n          text = selectedText[0] + ' ' + selectedText[1] + ':' + selectedText[2]\n        }\n\n        this.value = timestamp\n        const formatedTime = formatDate(new Date(timestamp), this.format)\n        this.$emit(EVENT_SELECT, timestamp, text, formatedTime)\n      },\n      _pickerCancel() {\n        this.$emit(EVENT_CANCEL)\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"node_modules/cube-ui/src/components/time-picker"}]}